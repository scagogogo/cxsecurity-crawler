package model

import (
	"encoding/json"
	"time"
)

// Vulnerability 表示一个安全漏洞条目
type Vulnerability struct {
	// 漏洞基本信息
	Date      time.Time `json:"date,omitempty"`       // 发布日期
	Title     string    `json:"title,omitempty"`      // 漏洞标题
	URL       string    `json:"url,omitempty"`        // 漏洞详情页URL
	RiskLevel string    `json:"risk_level,omitempty"` // 风险级别(High, Med., Low)

	// 漏洞标签
	Tags []string `json:"tags,omitempty"` // 标签列表(CVE, CWE, Remote, Local等)

	// 作者信息
	Author    string `json:"author,omitempty"`     // 作者名称
	AuthorURL string `json:"author_url,omitempty"` // 作者页面URL
}

// MarshalJSON 自定义JSON序列化方法，确保零值日期被正确省略
func (v Vulnerability) MarshalJSON() ([]byte, error) {
	type Alias Vulnerability
	aux := &struct {
		Date *time.Time `json:"date,omitempty"`
		*Alias
	}{
		Alias: (*Alias)(&v),
	}

	// 只有当Date不是零值时才设置
	if !v.Date.IsZero() {
		aux.Date = &v.Date
	}

	return json.Marshal(aux)
}

// VulnerabilityList 表示漏洞列表页面的解析结果
type VulnerabilityList struct {
	Items       []Vulnerability `json:"items"`        // 漏洞条目列表
	CurrentPage int             `json:"current_page"` // 当前页码
	TotalPages  int             `json:"total_pages"`  // 总页数
}
