package cmd

import (
	"github.com/scagogogo/cxsecurity-crawler/pkg/crawler"

	"github.com/spf13/cobra"
)

var (
	exploitOutputFile string
	exploitFields     string
	exploitIds        []string
	exploitSilent     bool
)

var exploitCmd = &cobra.Command{
	Use:   "exploit",
	Short: "爬取漏洞列表",
	Long:  `爬取CXSecurity网站的漏洞列表，并将结果保存为JSON格式`,
	Run: func(cmd *cobra.Command, args []string) {
		// 创建爬虫实例
		c := crawler.NewCrawler()

		// 执行爬取
		if len(exploitIds) > 0 {
			for _, id := range exploitIds {
				c.CrawlExploit(id, exploitOutputFile, exploitFields, exploitSilent)
			}
		} else {
			c.CrawlExploit("", exploitOutputFile, exploitFields, exploitSilent)
		}
	},
}

func init() {
	rootCmd.AddCommand(exploitCmd)

	// 添加标志
	exploitCmd.Flags().StringVarP(&exploitOutputFile, "output", "o", "exploit_result.json", "输出文件路径")
	exploitCmd.Flags().StringVarP(&exploitFields, "fields", "f", "all", "要输出的字段，用逗号分隔，或使用'all'获取所有字段")
	exploitCmd.Flags().StringArrayVarP(&exploitIds, "id", "i", []string{}, "要爬取的漏洞ID，例如：85")
	exploitCmd.Flags().BoolVarP(&exploitSilent, "silent", "s", false, "静默模式，不输出到标准输出，适用于API调用")
}
